// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"beacon/beacond/models"
)

// DeleteProbeReader is a Reader for the DeleteProbe structure.
type DeleteProbeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteProbeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewDeleteProbeCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteProbeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteProbeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteProbeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /probe] DeleteProbe", response, response.Code())
	}
}

// NewDeleteProbeCreated creates a DeleteProbeCreated with default headers values
func NewDeleteProbeCreated() *DeleteProbeCreated {
	return &DeleteProbeCreated{}
}

/*
DeleteProbeCreated describes a response with status code 201, with default header values.

Created
*/
type DeleteProbeCreated struct {
	Payload *models.ServerBaseResponse
}

// IsSuccess returns true when this delete probe created response has a 2xx status code
func (o *DeleteProbeCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete probe created response has a 3xx status code
func (o *DeleteProbeCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete probe created response has a 4xx status code
func (o *DeleteProbeCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete probe created response has a 5xx status code
func (o *DeleteProbeCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this delete probe created response a status code equal to that given
func (o *DeleteProbeCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the delete probe created response
func (o *DeleteProbeCreated) Code() int {
	return 201
}

func (o *DeleteProbeCreated) Error() string {
	return fmt.Sprintf("[DELETE /probe][%d] deleteProbeCreated  %+v", 201, o.Payload)
}

func (o *DeleteProbeCreated) String() string {
	return fmt.Sprintf("[DELETE /probe][%d] deleteProbeCreated  %+v", 201, o.Payload)
}

func (o *DeleteProbeCreated) GetPayload() *models.ServerBaseResponse {
	return o.Payload
}

func (o *DeleteProbeCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerBaseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProbeBadRequest creates a DeleteProbeBadRequest with default headers values
func NewDeleteProbeBadRequest() *DeleteProbeBadRequest {
	return &DeleteProbeBadRequest{}
}

/*
DeleteProbeBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteProbeBadRequest struct {
	Payload *models.ServerBaseResponse
}

// IsSuccess returns true when this delete probe bad request response has a 2xx status code
func (o *DeleteProbeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete probe bad request response has a 3xx status code
func (o *DeleteProbeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete probe bad request response has a 4xx status code
func (o *DeleteProbeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete probe bad request response has a 5xx status code
func (o *DeleteProbeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete probe bad request response a status code equal to that given
func (o *DeleteProbeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete probe bad request response
func (o *DeleteProbeBadRequest) Code() int {
	return 400
}

func (o *DeleteProbeBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /probe][%d] deleteProbeBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteProbeBadRequest) String() string {
	return fmt.Sprintf("[DELETE /probe][%d] deleteProbeBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteProbeBadRequest) GetPayload() *models.ServerBaseResponse {
	return o.Payload
}

func (o *DeleteProbeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerBaseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProbeNotFound creates a DeleteProbeNotFound with default headers values
func NewDeleteProbeNotFound() *DeleteProbeNotFound {
	return &DeleteProbeNotFound{}
}

/*
DeleteProbeNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteProbeNotFound struct {
	Payload *models.ServerBaseResponse
}

// IsSuccess returns true when this delete probe not found response has a 2xx status code
func (o *DeleteProbeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete probe not found response has a 3xx status code
func (o *DeleteProbeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete probe not found response has a 4xx status code
func (o *DeleteProbeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete probe not found response has a 5xx status code
func (o *DeleteProbeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete probe not found response a status code equal to that given
func (o *DeleteProbeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete probe not found response
func (o *DeleteProbeNotFound) Code() int {
	return 404
}

func (o *DeleteProbeNotFound) Error() string {
	return fmt.Sprintf("[DELETE /probe][%d] deleteProbeNotFound  %+v", 404, o.Payload)
}

func (o *DeleteProbeNotFound) String() string {
	return fmt.Sprintf("[DELETE /probe][%d] deleteProbeNotFound  %+v", 404, o.Payload)
}

func (o *DeleteProbeNotFound) GetPayload() *models.ServerBaseResponse {
	return o.Payload
}

func (o *DeleteProbeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerBaseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProbeInternalServerError creates a DeleteProbeInternalServerError with default headers values
func NewDeleteProbeInternalServerError() *DeleteProbeInternalServerError {
	return &DeleteProbeInternalServerError{}
}

/*
DeleteProbeInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteProbeInternalServerError struct {
	Payload *models.ServerBaseResponse
}

// IsSuccess returns true when this delete probe internal server error response has a 2xx status code
func (o *DeleteProbeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete probe internal server error response has a 3xx status code
func (o *DeleteProbeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete probe internal server error response has a 4xx status code
func (o *DeleteProbeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete probe internal server error response has a 5xx status code
func (o *DeleteProbeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete probe internal server error response a status code equal to that given
func (o *DeleteProbeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete probe internal server error response
func (o *DeleteProbeInternalServerError) Code() int {
	return 500
}

func (o *DeleteProbeInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /probe][%d] deleteProbeInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteProbeInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /probe][%d] deleteProbeInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteProbeInternalServerError) GetPayload() *models.ServerBaseResponse {
	return o.Payload
}

func (o *DeleteProbeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerBaseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
