// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"beacon/beacond/models"
)

// PostProbeReader is a Reader for the PostProbe structure.
type PostProbeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostProbeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostProbeCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostProbeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostProbeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostProbeConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostProbeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /probe] PostProbe", response, response.Code())
	}
}

// NewPostProbeCreated creates a PostProbeCreated with default headers values
func NewPostProbeCreated() *PostProbeCreated {
	return &PostProbeCreated{}
}

/*
PostProbeCreated describes a response with status code 201, with default header values.

Created
*/
type PostProbeCreated struct {
	Payload *models.ServerBaseResponse
}

// IsSuccess returns true when this post probe created response has a 2xx status code
func (o *PostProbeCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post probe created response has a 3xx status code
func (o *PostProbeCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post probe created response has a 4xx status code
func (o *PostProbeCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post probe created response has a 5xx status code
func (o *PostProbeCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post probe created response a status code equal to that given
func (o *PostProbeCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the post probe created response
func (o *PostProbeCreated) Code() int {
	return 201
}

func (o *PostProbeCreated) Error() string {
	return fmt.Sprintf("[POST /probe][%d] postProbeCreated  %+v", 201, o.Payload)
}

func (o *PostProbeCreated) String() string {
	return fmt.Sprintf("[POST /probe][%d] postProbeCreated  %+v", 201, o.Payload)
}

func (o *PostProbeCreated) GetPayload() *models.ServerBaseResponse {
	return o.Payload
}

func (o *PostProbeCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerBaseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProbeBadRequest creates a PostProbeBadRequest with default headers values
func NewPostProbeBadRequest() *PostProbeBadRequest {
	return &PostProbeBadRequest{}
}

/*
PostProbeBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostProbeBadRequest struct {
	Payload *models.ServerBaseResponse
}

// IsSuccess returns true when this post probe bad request response has a 2xx status code
func (o *PostProbeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post probe bad request response has a 3xx status code
func (o *PostProbeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post probe bad request response has a 4xx status code
func (o *PostProbeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post probe bad request response has a 5xx status code
func (o *PostProbeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post probe bad request response a status code equal to that given
func (o *PostProbeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post probe bad request response
func (o *PostProbeBadRequest) Code() int {
	return 400
}

func (o *PostProbeBadRequest) Error() string {
	return fmt.Sprintf("[POST /probe][%d] postProbeBadRequest  %+v", 400, o.Payload)
}

func (o *PostProbeBadRequest) String() string {
	return fmt.Sprintf("[POST /probe][%d] postProbeBadRequest  %+v", 400, o.Payload)
}

func (o *PostProbeBadRequest) GetPayload() *models.ServerBaseResponse {
	return o.Payload
}

func (o *PostProbeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerBaseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProbeNotFound creates a PostProbeNotFound with default headers values
func NewPostProbeNotFound() *PostProbeNotFound {
	return &PostProbeNotFound{}
}

/*
PostProbeNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PostProbeNotFound struct {
	Payload *models.ServerBaseResponse
}

// IsSuccess returns true when this post probe not found response has a 2xx status code
func (o *PostProbeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post probe not found response has a 3xx status code
func (o *PostProbeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post probe not found response has a 4xx status code
func (o *PostProbeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post probe not found response has a 5xx status code
func (o *PostProbeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post probe not found response a status code equal to that given
func (o *PostProbeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post probe not found response
func (o *PostProbeNotFound) Code() int {
	return 404
}

func (o *PostProbeNotFound) Error() string {
	return fmt.Sprintf("[POST /probe][%d] postProbeNotFound  %+v", 404, o.Payload)
}

func (o *PostProbeNotFound) String() string {
	return fmt.Sprintf("[POST /probe][%d] postProbeNotFound  %+v", 404, o.Payload)
}

func (o *PostProbeNotFound) GetPayload() *models.ServerBaseResponse {
	return o.Payload
}

func (o *PostProbeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerBaseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProbeConflict creates a PostProbeConflict with default headers values
func NewPostProbeConflict() *PostProbeConflict {
	return &PostProbeConflict{}
}

/*
PostProbeConflict describes a response with status code 409, with default header values.

Conflict
*/
type PostProbeConflict struct {
	Payload *models.ServerBaseResponse
}

// IsSuccess returns true when this post probe conflict response has a 2xx status code
func (o *PostProbeConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post probe conflict response has a 3xx status code
func (o *PostProbeConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post probe conflict response has a 4xx status code
func (o *PostProbeConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this post probe conflict response has a 5xx status code
func (o *PostProbeConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this post probe conflict response a status code equal to that given
func (o *PostProbeConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the post probe conflict response
func (o *PostProbeConflict) Code() int {
	return 409
}

func (o *PostProbeConflict) Error() string {
	return fmt.Sprintf("[POST /probe][%d] postProbeConflict  %+v", 409, o.Payload)
}

func (o *PostProbeConflict) String() string {
	return fmt.Sprintf("[POST /probe][%d] postProbeConflict  %+v", 409, o.Payload)
}

func (o *PostProbeConflict) GetPayload() *models.ServerBaseResponse {
	return o.Payload
}

func (o *PostProbeConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerBaseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProbeInternalServerError creates a PostProbeInternalServerError with default headers values
func NewPostProbeInternalServerError() *PostProbeInternalServerError {
	return &PostProbeInternalServerError{}
}

/*
PostProbeInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostProbeInternalServerError struct {
	Payload *models.ServerBaseResponse
}

// IsSuccess returns true when this post probe internal server error response has a 2xx status code
func (o *PostProbeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post probe internal server error response has a 3xx status code
func (o *PostProbeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post probe internal server error response has a 4xx status code
func (o *PostProbeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post probe internal server error response has a 5xx status code
func (o *PostProbeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post probe internal server error response a status code equal to that given
func (o *PostProbeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post probe internal server error response
func (o *PostProbeInternalServerError) Code() int {
	return 500
}

func (o *PostProbeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /probe][%d] postProbeInternalServerError  %+v", 500, o.Payload)
}

func (o *PostProbeInternalServerError) String() string {
	return fmt.Sprintf("[POST /probe][%d] postProbeInternalServerError  %+v", 500, o.Payload)
}

func (o *PostProbeInternalServerError) GetPayload() *models.ServerBaseResponse {
	return o.Payload
}

func (o *PostProbeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerBaseResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
