// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteProbeParams creates a new DeleteProbeParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteProbeParams() *DeleteProbeParams {
	return &DeleteProbeParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteProbeParamsWithTimeout creates a new DeleteProbeParams object
// with the ability to set a timeout on a request.
func NewDeleteProbeParamsWithTimeout(timeout time.Duration) *DeleteProbeParams {
	return &DeleteProbeParams{
		timeout: timeout,
	}
}

// NewDeleteProbeParamsWithContext creates a new DeleteProbeParams object
// with the ability to set a context for a request.
func NewDeleteProbeParamsWithContext(ctx context.Context) *DeleteProbeParams {
	return &DeleteProbeParams{
		Context: ctx,
	}
}

// NewDeleteProbeParamsWithHTTPClient creates a new DeleteProbeParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteProbeParamsWithHTTPClient(client *http.Client) *DeleteProbeParams {
	return &DeleteProbeParams{
		HTTPClient: client,
	}
}

/*
DeleteProbeParams contains all the parameters to send to the API endpoint

	for the delete probe operation.

	Typically these are written to a http.Request.
*/
type DeleteProbeParams struct {

	/* Namespace.

	   the repo namespace the probe should check for image updates
	*/
	Namespace string

	/* Repo.

	   the repo name which the probe should check for image updates
	*/
	Repo string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete probe params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteProbeParams) WithDefaults() *DeleteProbeParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete probe params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteProbeParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete probe params
func (o *DeleteProbeParams) WithTimeout(timeout time.Duration) *DeleteProbeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete probe params
func (o *DeleteProbeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete probe params
func (o *DeleteProbeParams) WithContext(ctx context.Context) *DeleteProbeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete probe params
func (o *DeleteProbeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete probe params
func (o *DeleteProbeParams) WithHTTPClient(client *http.Client) *DeleteProbeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete probe params
func (o *DeleteProbeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNamespace adds the namespace to the delete probe params
func (o *DeleteProbeParams) WithNamespace(namespace string) *DeleteProbeParams {
	o.SetNamespace(namespace)
	return o
}

// SetNamespace adds the namespace to the delete probe params
func (o *DeleteProbeParams) SetNamespace(namespace string) {
	o.Namespace = namespace
}

// WithRepo adds the repo to the delete probe params
func (o *DeleteProbeParams) WithRepo(repo string) *DeleteProbeParams {
	o.SetRepo(repo)
	return o
}

// SetRepo adds the repo to the delete probe params
func (o *DeleteProbeParams) SetRepo(repo string) {
	o.Repo = repo
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteProbeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param namespace
	qrNamespace := o.Namespace
	qNamespace := qrNamespace
	if qNamespace != "" {

		if err := r.SetQueryParam("namespace", qNamespace); err != nil {
			return err
		}
	}

	// query param repo
	qrRepo := o.Repo
	qRepo := qrRepo
	if qRepo != "" {

		if err := r.SetQueryParam("repo", qRepo); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
