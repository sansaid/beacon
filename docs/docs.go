// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/beacon": {
            "get": {
                "description": "describes the current status of beacond",
                "produces": [
                    "application/json"
                ],
                "summary": "Get beacon details",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.BeaconDescribeResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "reports the health of the beacond server",
                "produces": [
                    "application/json"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.BaseResponse"
                        }
                    }
                }
            }
        },
        "/probe": {
            "post": {
                "description": "creates a probe for the namespace and repo provided in the URL query parameters",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a probe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the repo namespace the probe should check for image updates",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the repo name which the probe should check for image updates",
                        "name": "repo",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/server.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.BaseResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/server.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.BaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "deletes the probe for the namespace and repo provided in the URL query parameters",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a probe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the repo namespace the probe should check for image updates",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the repo name which the probe should check for image updates",
                        "name": "repo",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/server.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/server.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/server.BaseResponse"
                        }
                    }
                }
            }
        },
        "/probes": {
            "get": {
                "description": "lists probes that are running for beacond",
                "produces": [
                    "application/json"
                ],
                "summary": "Lists all probes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.ListProbesResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "server.BaseResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "server.BeaconDescribeResponse": {
            "type": "object",
            "properties": {
                "probes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "registry": {
                    "type": "string"
                },
                "runtime": {
                    "type": "string"
                }
            }
        },
        "server.ListProbesResponse": {
            "type": "object",
            "properties": {
                "probes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "beacond API",
	Description:      "API for beacond server",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
